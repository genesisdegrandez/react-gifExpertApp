{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridtem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropType","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridtem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA2B3BZ,EAAYe,UAAY,CACpBd,cAAee,IAASC,KAAKC,Y,mCClCvBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEiCC,UAAUH,GAF3C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCERO,EAAa,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAInC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,qBAAKgB,UAAU,0CAAf,SACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,OCNnBS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAGjB,ECHoB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WACP1B,EAAQC,GACL0B,MAAM,SAAAC,GAEDX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,SAKjB,CAACtB,IAKDuB,EDrB4BK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAKxB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAEjDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBpBkB,EAAe,WAGxB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBrC+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.583935ec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => { //aca recibimos el componente padre\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {//cuando la persona escribe\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {//el enter\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>2){ //haciendo las validaciones para no recibir vacio\r\n            setCategories(cats => [inputValue,...cats,]);\r\n            setinputValue('');\r\n            \r\n        }   \r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={  handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n    AddCategory.prototype = { //para uilizar los componentes como es debido\r\n        setCategories: PropType.func.isRequired\r\n    }\r\n\r\n","\r\n\r\n export const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Z0PNHblhXYhwxjbHN2WuHlE3zSJmzTaJ`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n    \r\n\r\n\r\n    }","import React from 'react'\r\n\r\n\r\n\r\nexport const GifGridtem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url )\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title}/> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridtem } from './GifGridtem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n        const {data:images, loading} = useFetchGifs(category);\r\n\r\n       \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img=> (\r\n                        <GifGridtem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n            \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n          .then( imgs => {\r\n             \r\n                console.log(imgs)\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n        \r\n              \r\n          })\r\n         },[category]) //corchetes para solo uhna vez\r\n\r\n\r\n\r\n\r\n    return state; //{data:[], loading true}\r\n\r\n}","//shoutcourt rafc y tab\r\nimport React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //      setCategories(cats => [...cats,'HunterXHunter']) \r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {  \r\n                    categories.map( category => \r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category}/>\r\n                        ) //el mao nos ayuda para el arreglo \r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}